/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example
import io.ktor.client.*
import io.ktor.client.call.*
import io.ktor.client.engine.cio.*
import io.ktor.client.plugins.contentnegotiation.*
import io.ktor.client.request.*
import io.ktor.http.*
import io.ktor.serialization.kotlinx.json.*
import kotlinx.coroutines.runBlocking
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.Json

// Modelo de respuesta simplificado
@Serializable
data class GeminiResponse(
    val candidates: List<Candidate> = emptyList()
)

@Serializable
data class Candidate(
    val content: Content? = null
)

@Serializable
data class Content(
    val parts: List<Part> = emptyList()
)

@Serializable
data class Part(
    val text: String? = null
)

fun main() = runBlocking {
    val apiKey = System.getenv("AIzaSyD_xdM1kprnyK3GEO9kTiU7qqR9haYpEp0") ?: error("Falta la API key en variable de entorno GEMINI_API_KEY")

    val client = HttpClient(CIO) {
        install(ContentNegotiation) {
            json(Json { ignoreUnknownKeys = true })
        }
    }

    val response: GeminiResponse = client.post("https://generativelanguage.googleapis.com/v1/models/gemini-1.5-flash:generateContent?key=$apiKey") {
        contentType(ContentType.Application.Json)
        setBody(
            mapOf(
                "contents" to listOf(
                    mapOf(
                        "parts" to listOf(
                            mapOf("text" to "Escribe un haiku sobre Kotlin en español")
                        )
                    )
                )
            )
        )
    }.body()

    val output = response.candidates.firstOrNull()?.content?.parts?.firstOrNull()?.text
    println("Gemini respondió:\n$output")

    client.close()
}
